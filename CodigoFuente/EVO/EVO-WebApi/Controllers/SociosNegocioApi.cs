/*
 * API de    API de administración de Socios de Negocio
 *
 * API de administración de Socios de Negocio 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jusuga@digitalcg.com.co
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using AutoMapper;
using EVO_BusinessLogic;
using EVO_BusinessObjects;
using EVO_BusinessObjects.Exceptions;
using EVO_WebApi.Attributes;
using EVO_WebApi.Models.SociosNegocioApi;
using EVO_WebApi.Resources;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using NLog;
using Swashbuckle.AspNetCore.Annotations;
using System.Collections.Generic;

namespace EVO_WebApi.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class SociosNegocioApiController : ControllerBase
    {
        #region Campos Privados
        private static readonly Logger logger = LogManager.GetCurrentClassLogger();
        private IMapper mapper;
        #endregion

        #region Métodos
        /// <summary>
        /// Obtiene los socios de negocio
        /// </summary>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("/api/sociosnegocio/")]
        [ValidateModelState]
        [SwaggerOperation("ObtenerSociosNegocio")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SocioNegocioResponse>), description: "Operación realizada con éxito")]
        public virtual IActionResult ObtenerSociosNegocio()
        {
            logger.Info("Entró al método ObtenerSociosNegocio en SociosNegocioApi sin parámetros");

            try
            {
                BLSocioNegocio bLSocioNegocio = new BLSocioNegocio();

                List<BOSocioNegocioResponse> bOSociosNegocioResponse = bLSocioNegocio.ObtenerSociosNegocio();

                List<SocioNegocioResponse> sociosNegocioResponse = this.mapper.Map<List<BOSocioNegocioResponse>, List<SocioNegocioResponse>>(bOSociosNegocioResponse);

                return Ok(sociosNegocioResponse);
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }
        }

        /// <summary>
        /// Obtiene los socios de negocio por identificacion o nombre
        /// </summary>
        /// <param name="identificacion">Indica la identificación</param>
        /// <param name="nombre">Indica el nombre</param>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("/api/sociosnegocio/filtrar")]
        [ValidateModelState]
        [SwaggerOperation("ObtenerSociosNegocioxFiltro")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SocioNegocioResponse>), description: "Operación realizada con éxito")]
        public virtual IActionResult ObtenerSociosNegocioxFiltro([FromQuery]string identificacion, [FromQuery]string nombre)
        {
            logger.Info($"Entró al método ObtenerSociosNegocioxFiltro en SociosNegocioApi con los parámetros identificacion = {identificacion} ,nombre = {nombre}");

            try
            {
                BLSocioNegocio bLSocioNegocio = new BLSocioNegocio();

                List<BOSocioNegocioResponse> bOSociosNegocioResponse = bLSocioNegocio.ObtenerSociosNegocioxFiltro(identificacion, nombre);

                List<SocioNegocioResponse> sociosNegocioResponse = this.mapper.Map<List<BOSocioNegocioResponse>, List<SocioNegocioResponse>>(bOSociosNegocioResponse);

                return Ok(sociosNegocioResponse);
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }
        }
        #endregion

        #region Contructores
        /// <summary>
        /// 
        /// </summary>
        /// <param name="mapper"></param>
        public SociosNegocioApiController(IMapper mapper)
        {
            this.mapper = mapper;
        }

        #endregion
    }
}
