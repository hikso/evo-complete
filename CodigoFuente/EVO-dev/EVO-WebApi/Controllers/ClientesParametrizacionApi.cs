/*
 * API de Parametrización de Clientes
 *
 * API de administración de Parametrización de Clientes 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jusuga@digitalcg.com.co
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using AutoMapper;
using EVO_BusinessLogic;
using EVO_BusinessObjects;
using EVO_BusinessObjects.Exceptions;
using EVO_WebApi.Attributes;
using EVO_WebApi.Models.ClientesParametrizacionApi;
using EVO_WebApi.Resources;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;
using NLog;
using Swashbuckle.AspNetCore.Annotations;
using System.Collections.Generic;

namespace EVO_WebApi.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ClientesParametrizacionApiController : ControllerBase
    {
        #region Campos Privados
        private static readonly Logger logger = LogManager.GetCurrentClassLogger();
        private IMapper mapper;
        #endregion

        #region Métodos
        /// <summary>
        /// Obtiene las parametrizaciones del cliente
        /// </summary>
        /// <param name="codigoCliente">Indica el código del cliente</param>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("/api/clienteparametrizacion/parametrizaciones")]
        [ValidateModelState]
        [SwaggerOperation("ObtenerPatrametrizacionesxCliente")]
        [SwaggerResponse(statusCode: 200, type: typeof(ParametrizacionResponse), description: "Operación realizada con éxito")]
        public virtual IActionResult ObtenerPatrametrizacionesxCliente([FromQuery]string codigoCliente)
        {
            logger.Info($"Entró al método ObtenerPatrametrizacionesxCliente en ClientesParametrizacionApi con el parámetro codigoCliente = {codigoCliente} ");

            try
            {
                BLClientesParametrizacion bLClientesParametrizacion = new BLClientesParametrizacion();

                BOParametrizacionResponse bOParametrizacionResponse = bLClientesParametrizacion.ObtenerPatrametrizacionesxCliente(codigoCliente);

                ParametrizacionResponse parametrizacionResponse = this.mapper.Map<BOParametrizacionResponse,ParametrizacionResponse>(bOParametrizacionResponse);

                return Ok(parametrizacionResponse);
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }
        }
        #endregion

        #region Contructores
        /// <summary>
        /// 
        /// </summary>
        /// <param name="mapper"></param>
        public ClientesParametrizacionApiController(IMapper mapper)
        {
            this.mapper = mapper;
        }

        #endregion
    }
}
