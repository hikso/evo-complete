/*
 * API de Bodegas
 *
 * API de administración de Bodegas 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jusuga@digitalcg.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using AutoMapper;
using EVO_BusinessLogic;
using EVO_BusinessObjects;
using EVO_BusinessObjects.Exceptions;
using EVO_WebApi.Attributes;
using EVO_WebApi.Models.BodegasApi;
using EVO_WebApi.Resources;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using NLog;
using Swashbuckle.AspNetCore.Annotations;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace EVO_WebApi.Controllers
{
    /// <summary>
    /// 
    /// </summary>    
    [ApiController]
    [Authorize]
    public class BodegasApiController : ControllerBase
    {
        #region Campos Privados
        private static readonly Logger logger = LogManager.GetCurrentClassLogger();
        private IMapper mapper;
        #endregion

        /// <summary>
        /// Obtiene las bodegas a las cuales se les pueden hacer solicitudes de pedido
        /// </summary>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("/api/bodegas/solicitud")]
        [ValidateModelState]
        [SwaggerOperation("ObtenerBodegasSolicitud")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<BodegaResponse>), description: "Operación realizada con éxito")]
        public virtual IActionResult ObtenerBodegasSolicitud()
        {
            logger.Info($"Entró al método ObtenerBodegasSolicitud en EVO-WebApi - BodegasApi sin parámetros");

            try
            {
                BLBodega bLBodegas = new BLBodega();

                List<BOBodega> boBodegas = bLBodegas.ObtenerBodegasSolicitud();

                List<BodegaResponse> bodegasResponse =

                this.mapper.Map<List<BOBodega>,List<BodegaResponse>>(boBodegas);

                return Ok(bodegasResponse);
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }
        }

        /// <summary>
        /// Obtiene los tipos de bodegas a las cuales se les pueden hacer solicitudes de pedido
        /// </summary>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("/api/bodegas/tipos")]
        [ValidateModelState]
        [SwaggerOperation("ObtenerTiposBodega")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ObtenerTipoBodegaAResponse>), description: "Operación realizada con éxito")]
        public virtual IActionResult ObtenerTiposBodega()
        {
            logger.Info($"Entró al método ObtenerTiposBodega en EVO-WebApi sin parámetros");

            try
            {
                BLBodega bLBodegas = new BLBodega();

                List<BOObtenerTipoBodegaAResponse> boTipos = bLBodegas.ObtenerTiposBodega();

                List<ObtenerTipoBodegaAResponse> tipos =

                this.mapper.Map<List<BOObtenerTipoBodegaAResponse>, List<ObtenerTipoBodegaAResponse>>(boTipos);

                return Ok(tipos);
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }
        }

        /// <summary>
        /// Obtiene las bodegas filtradas por código artículo y id de entrega
        /// </summary>
        /// <param name="codigo">Indica el código del artículo</param>
        /// <param name="entregaId">Indica el id de la entrega</param>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("/api/bodegas/filtrar")]
        [ValidateModelState]
        [SwaggerOperation("ObtenerBodegasFiltrar")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<BodegaResponse>), description: "Operación realizada con éxito")]
        public virtual IActionResult ObtenerBodegasFiltrar([FromQuery][Required]string codigo, [FromQuery][Required]int entregaId)
        {
            logger.Info($"Entró al método ObtenerBodegasFiltrar en Api Bodegas con los parámetros código = {codigo},entregaId = {entregaId}");
            try
            {
                BLBodega bLBodegas = new BLBodega();

                List<BOBodega> bodegasPlanta = bLBodegas.ObtenerBodegasFiltrar(codigo,entregaId);

                List<BodegaResponse> bodegasPlantaResponse =

                this.mapper.Map<List<BOBodega>, List<BodegaResponse>>(bodegasPlanta);

                return Ok(bodegasPlantaResponse);
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }
        }       

        /// <summary>
        /// Obtiene las bodegas de tipo punto de venta
        /// </summary>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("/api/bodegas/puntoventa")]
        [ValidateModelState]
        [SwaggerOperation("ObtenerBodegasTipoPuntoVenta")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<BodegaResponse>), description: "Operación realizada con éxito")]
        public virtual IActionResult ObtenerBodegasTipoPuntoVenta()
        {
            logger.Info("Entró al método ObtenerBodegasTipoPuntoVenta en Api Bodegas sin parámetros");
            try
            {
                BLBodega bLBodegas = new BLBodega();

                List<BOBodega> bodegasPlanta = bLBodegas.ObtenerBodegasTipoPuntoVenta();

                List<BodegaResponse> bodegasPlantaResponse =

                this.mapper.Map<List<BOBodega>, List<BodegaResponse>>(bodegasPlanta);

                return Ok(bodegasPlantaResponse);
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }
        }

        /// <summary>
        /// Obtiene las bodegas de tipo planta
        /// </summary>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("/api/bodegas/planta")]
        [ValidateModelState]
        [SwaggerOperation("ObtenerBodegasTipoPlanta")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<BodegaResponse>), description: "Operación realizada con éxito")]
        public virtual IActionResult ObtenerBodegasTipoPlanta()
        {
            logger.Info("Entró al método ObtenerBodegasTipoPlanta en Api Bodegas sin parámetros");
            try
            {
                BLBodega bLBodegas = new BLBodega();

                List<BOBodega> bodegasPlanta = bLBodegas.ObtenerBodegasTipoPlanta();

                List<BodegaResponse> bodegasPlantaResponse =

                this.mapper.Map<List<BOBodega>, List<BodegaResponse>>(bodegasPlanta);

                return Ok(bodegasPlantaResponse);
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }
        }

        /// <summary>
        /// Obtiene la bodega por código
        /// </summary>
        /// <param name="codigo">Indica el código de la bodega</param>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("/api/bodegas/{codigo}")]
        [ValidateModelState]
        [SwaggerOperation("ObtenerBodegaxCodigo")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<BodegaResponse>), description: "Operación realizada con éxito")]
        public virtual IActionResult ObtenerBodegaxCodigo([FromRoute][Required]string codigo)
        {
            logger.Info($"Entró al método ObtenerBodegaxCodigo en Api con el parametro codigo = {codigo}");
            try
            {                
                BLBodega bLBodegas = new BLBodega();

                BOBodega bodega = bLBodegas.ObtenerBodegaPorCodigo(codigo);

                BodegaResponse bodegaResponse = this.mapper.Map<BOBodega, BodegaResponse>(bodega);

                return Ok(bodegaResponse);
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }


        }

        #region Contructores
        /// <summary>
        /// 
        /// </summary>
        /// <param name="mapper"></param>
        public BodegasApiController(IMapper mapper)
        {
            this.mapper = mapper;
        }
        #endregion
    }
}
