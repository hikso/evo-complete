/*
 * API de Pedidos
 *
 * API de administración de Pedidos 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jusuga@digitalcg.com.co
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using Newtonsoft.Json;
using System;
using System.Runtime.Serialization;
using System.Text;

namespace EVO_WebApi.Models
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class EntregaRequestArticulos : IEquatable<EntregaRequestArticulos>
    {
        /// <summary>
        /// Id del detalle de la entrega
        /// </summary>
        /// <value>Id del detalle de la entrega</value>
        [DataMember(Name = "detalleEntregaId")]
        public int DetalleEntregaId { get; set; }
     
        /// <summary>
        /// Código del artículo
        /// </summary>
        /// <value>PT-1485</value>
        [DataMember(Name = "codigo")]
        public string Codigo { get; set; }
        
        /// <summary>
        /// Id estado artículo
        /// </summary>
        /// <value>1</value>
        [DataMember(Name = "idEstadoArticulo")]
        public int IdEstadoArticulo { get; set; }

        /// <summary>
        /// Cantidad del artículo solicitada
        /// </summary>
        /// <value>Cantidad del artículo solicitada</value>
        [DataMember(Name = "cantidadEntrega")]
        public decimal CantidadEntrega { get; set; }

        /// <summary>
        /// Cantidad pendiente
        /// </summary>
        /// <value>4535</value>
        [DataMember(Name = "cantidadPendiente")]
        public decimal CantidadPendiente { get; set; }

        /// <summary>
        /// Cantidad aprobada
        /// </summary>
        /// <value>4535</value>
        [DataMember(Name = "cantidadAprobada")]
        public decimal CantidadAprobada { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EntregaRequestArticulos {\n");
            sb.Append("  DetalleEntregaId: ").Append(DetalleEntregaId).Append("\n");
            sb.Append("  CantidadEntrega: ").Append(CantidadEntrega).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((EntregaRequestArticulos)obj);
        }

        /// <summary>
        /// Returns true if EntregaRequestArticulos instances are equal
        /// </summary>
        /// <param name="other">Instance of EntregaRequestArticulos to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EntregaRequestArticulos other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return
                (
                    DetalleEntregaId == other.DetalleEntregaId ||
                    DetalleEntregaId != null &&
                    DetalleEntregaId.Equals(other.DetalleEntregaId)
                ) &&
                (
                    CantidadEntrega == other.CantidadEntrega ||
                    CantidadEntrega != null &&
                    CantidadEntrega.Equals(other.CantidadEntrega)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                if (DetalleEntregaId != null)
                    hashCode = hashCode * 59 + DetalleEntregaId.GetHashCode();
                if (CantidadEntrega != null)
                    hashCode = hashCode * 59 + CantidadEntrega.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
#pragma warning disable 1591

        public static bool operator ==(EntregaRequestArticulos left, EntregaRequestArticulos right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(EntregaRequestArticulos left, EntregaRequestArticulos right)
        {
            return !Equals(left, right);
        }

#pragma warning restore 1591
        #endregion Operators
    }
}
