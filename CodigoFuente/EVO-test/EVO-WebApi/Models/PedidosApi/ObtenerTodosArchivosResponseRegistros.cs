/*
 * API de Pedidos
 *
 * API de administraci√≥n de Pedidos 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jusuga@digitalcg.com.co
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace EVO_WebApi.Models.PedidosApi
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ObtenerTodosArchivosResponseRegistros : IEquatable<ObtenerTodosArchivosResponseRegistros>
    { 
        /// <summary>
        /// Id del archivo
        /// </summary>
        /// <value>Id del archivo</value>
        [DataMember(Name="ArchivoId")]
        public int? ArchivoId { get; set; }

        /// <summary>
        /// nombre del archivo cargado
        /// </summary>
        /// <value>nombre del archivo cargado</value>
        [DataMember(Name="NombreArchivo")]
        public string NombreArchivo { get; set; }

        /// <summary>
        /// Fecha en la que se carrga el archivo
        /// </summary>
        /// <value>Fecha en la que se carrga el archivo</value>
        [DataMember(Name="fechaCarga")]
        public string FechaCarga { get; set; }

        /// <summary>
        /// Fecha inicial en la que se carga el archivo
        /// </summary>
        /// <value>Fecha inicial en la que se carga el archivo</value>
        [DataMember(Name="fechaInicial")]
        public string FechaInicial { get; set; }

        /// <summary>
        /// Fecha final en la que se carga el archivo
        /// </summary>
        /// <value>Fecha final en la que se carga el archivo</value>
        [DataMember(Name="fechaFinal")]
        public string FechaFinal { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ObtenerTodosArchivosResponseRegistros {\n");
            sb.Append("  ArchivoId: ").Append(ArchivoId).Append("\n");
            sb.Append("  NombreArchivo: ").Append(NombreArchivo).Append("\n");
            sb.Append("  FechaCarga: ").Append(FechaCarga).Append("\n");
            sb.Append("  FechaInicial: ").Append(FechaInicial).Append("\n");
            sb.Append("  FechaFinal: ").Append(FechaFinal).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ObtenerTodosArchivosResponseRegistros)obj);
        }

        /// <summary>
        /// Returns true if ObtenerTodosArchivosResponseRegistros instances are equal
        /// </summary>
        /// <param name="other">Instance of ObtenerTodosArchivosResponseRegistros to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ObtenerTodosArchivosResponseRegistros other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    ArchivoId == other.ArchivoId ||
                    ArchivoId != null &&
                    ArchivoId.Equals(other.ArchivoId)
                ) && 
                (
                    NombreArchivo == other.NombreArchivo ||
                    NombreArchivo != null &&
                    NombreArchivo.Equals(other.NombreArchivo)
                ) && 
                (
                    FechaCarga == other.FechaCarga ||
                    FechaCarga != null &&
                    FechaCarga.Equals(other.FechaCarga)
                ) && 
                (
                    FechaInicial == other.FechaInicial ||
                    FechaInicial != null &&
                    FechaInicial.Equals(other.FechaInicial)
                ) && 
                (
                    FechaFinal == other.FechaFinal ||
                    FechaFinal != null &&
                    FechaFinal.Equals(other.FechaFinal)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (ArchivoId != null)
                    hashCode = hashCode * 59 + ArchivoId.GetHashCode();
                    if (NombreArchivo != null)
                    hashCode = hashCode * 59 + NombreArchivo.GetHashCode();
                    if (FechaCarga != null)
                    hashCode = hashCode * 59 + FechaCarga.GetHashCode();
                    if (FechaInicial != null)
                    hashCode = hashCode * 59 + FechaInicial.GetHashCode();
                    if (FechaFinal != null)
                    hashCode = hashCode * 59 + FechaFinal.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ObtenerTodosArchivosResponseRegistros left, ObtenerTodosArchivosResponseRegistros right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ObtenerTodosArchivosResponseRegistros left, ObtenerTodosArchivosResponseRegistros right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
