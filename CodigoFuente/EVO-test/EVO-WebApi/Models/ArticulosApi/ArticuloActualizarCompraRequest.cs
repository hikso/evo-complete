/*
 * API de Artículos
 *
 * API de administración de Articulos 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jusuga@digitalcg.com.co
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using Newtonsoft.Json;
using System;
using System.Runtime.Serialization;
using System.Text;

namespace EVO_WebApi.Models.ArticulosApi
{
    /// <summary>
    /// Representa el artículo a actualizar en la compra
    /// </summary>
    [DataContract]
    public partial class ArticuloActualizarCompraRequest : IEquatable<ArticuloActualizarCompraRequest>
    {
        /// <summary>
        /// Id del detalle de pedido
        /// </summary>
        /// <value>Id del detalle de pedido</value>
        [DataMember(Name = "detallePedidoId")]
        public int DetallePedidoId { get; set; }

        /// <summary>
        /// Cantidad a gestionar
        /// </summary>
        /// <value>Cantidad a gestionar</value>
        [DataMember(Name = "cantidadGestionar")]
        public string CantidadGestionar { get; set; }

        /// <summary>
        /// Id de la acción
        /// </summary>
        /// <value>Id de la acción</value>
        [DataMember(Name = "accionId")]
        public int AccionId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ArticuloActualizarCompraRequest {\n");
            sb.Append("  DetallePedidoId: ").Append(DetallePedidoId).Append("\n");
            sb.Append("  CantidadGestionar: ").Append(CantidadGestionar).Append("\n");
            sb.Append("  AccionId: ").Append(AccionId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ArticuloActualizarCompraRequest)obj);
        }

        /// <summary>
        /// Returns true if ArticuloActualizarCompraRequest instances are equal
        /// </summary>
        /// <param name="other">Instance of ArticuloActualizarCompraRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ArticuloActualizarCompraRequest other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return
                (
                    DetallePedidoId == other.DetallePedidoId ||
                    DetallePedidoId != null &&
                    DetallePedidoId.Equals(other.DetallePedidoId)
                ) &&
                (
                    CantidadGestionar == other.CantidadGestionar ||
                    CantidadGestionar != null &&
                    CantidadGestionar.Equals(other.CantidadGestionar)
                ) &&
                (
                    AccionId == other.AccionId ||
                    AccionId != null &&
                    AccionId.Equals(other.AccionId)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                if (DetallePedidoId != null)
                    hashCode = hashCode * 59 + DetallePedidoId.GetHashCode();
                if (CantidadGestionar != null)
                    hashCode = hashCode * 59 + CantidadGestionar.GetHashCode();
                if (AccionId != null)
                    hashCode = hashCode * 59 + AccionId.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
#pragma warning disable 1591

        public static bool operator ==(ArticuloActualizarCompraRequest left, ArticuloActualizarCompraRequest right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ArticuloActualizarCompraRequest left, ArticuloActualizarCompraRequest right)
        {
            return !Equals(left, right);
        }

#pragma warning restore 1591
        #endregion Operators
    }
}
