/*
 * API de Pesaje
 *
 * API de administración de Pesaje 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jusuga@digitalcg.com.co
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using AutoMapper;
using EVO_BusinessLogic;
using EVO_BusinessObjects;
using EVO_BusinessObjects.Enum;
using EVO_BusinessObjects.Exceptions;
using EVO_WebApi.Attributes;
using EVO_WebApi.Models.PesajeApi;
using EVO_WebApi.Resources;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using NLog;
using Swashbuckle.AspNetCore.Annotations;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace EVO_WebApi.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class PesajeApiController : ControllerBase
    {
        #region Campos Privados
        private static readonly Logger logger = LogManager.GetCurrentClassLogger();
        private IMapper mapper;
        #endregion

        #region Métodos


        /// <summary>
        /// Registra un pesaje en recepción a cinco
        /// </summary>
        /// <param name="body">Solicitud para el registro del pesaje</param>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpPost]
        [Route("/api/pesaje/recepcion/cinco")]
        [ValidateModelState]
        [SwaggerOperation("AsignarPesajeRecepcionCinco")]
        public virtual IActionResult AsignarPesajeRecepcionCinco([FromBody] PesajeRequest body)
        {
            logger.Info($"Entró al método AsignarPesajeRecepcionCinco en Api Pesaje con los parámetros body = {JsonConvert.SerializeObject(body)}");

            try
            {
                BOPesajeRequest bOPesajeRequest = this.mapper.Map<PesajeRequest, BOPesajeRequest>(body);

                BLPesaje bLPesaje = new BLPesaje();

                if (HttpContext.User.Identity != null)
                {
                    bOPesajeRequest.Usuario = HttpContext.User.Identity.Name;
                }

                bOPesajeRequest.PesajeAl = PesajeAlEnum.Cinco;

                return Ok(bLPesaje.AsignarPesajeRecepcion(bOPesajeRequest));
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }
        }

        /// <summary>
        /// Registra un pesaje en recepción a ocho
        /// </summary>
        /// <param name="body">Solicitud para el registro del pesaje</param>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpPost]
        [Route("/api/pesaje/recepcion/ocho")]
        [ValidateModelState]
        [SwaggerOperation("AsignarPesajeRecepcionOcho")]
        public virtual IActionResult AsignarPesajeRecepcionOcho([FromBody] PesajeRequest body)
        {
            logger.Info($"Entró al método AsignarPesajeRecepcionOcho en Api Pesaje con los parámetros body = {JsonConvert.SerializeObject(body)}");

            try
            {
                BOPesajeRequest bOPesajeRequest = this.mapper.Map<PesajeRequest, BOPesajeRequest>(body);

                BLPesaje bLPesaje = new BLPesaje();

                if (HttpContext.User.Identity != null)
                {
                    bOPesajeRequest.Usuario = HttpContext.User.Identity.Name;
                }

                bOPesajeRequest.PesajeAl = PesajeAlEnum.Ocho;

                return Ok(bLPesaje.AsignarPesajeRecepcion(bOPesajeRequest));
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }
        }

        /// <summary>
        /// Registra la cantidad recibida en recepción de artículos de unidad de medida tipo unidad.
        /// </summary>
        /// <param name="body">Solicitud para el registro de la cantidad recibida cuando sea por unidad</param>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpPost]
        [Route("/api/pesaje/recepcion/cantidadrecibida")]
        [ValidateModelState]
        [SwaggerOperation("AsignarCantidadRecibida")]
        public virtual IActionResult AsignarCantidadRecibida([FromBody] CantidadRecibidaRequest body)
        {
            logger.Info($"Entró al método AsignarCantidadRecibida en PesajeApi con los parámetros = {JsonConvert.SerializeObject(body)} ");

            try
            {
                BLPesaje bLPesaje = new BLPesaje();

                BOCantidadRecibidaRequest bOCantidadRecibidaRequest = this.mapper.Map<CantidadRecibidaRequest, BOCantidadRecibidaRequest>(body);

                if (HttpContext.User.Identity != null)
                {
                    bOCantidadRecibidaRequest.Usuario = HttpContext.User.Identity.Name;
                }

                return Ok(bLPesaje.AsignarCantidadRecibida(bOCantidadRecibidaRequest));
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }
        }

        /// <summary>
        /// Obtiene los pesajes de un artículo en recepción
        /// </summary>
        /// <param name="pesajeArticuloId">Indica el id del artículo en el pesaje</param>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("/api/pesaje/recepcion")]
        [ValidateModelState]
        [SwaggerOperation("ObtenerPesajesRecepcion")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PesajeResponse>), description: "Operación realizada con éxito")]
        public virtual IActionResult ObtenerPesajesRecepcion([FromQuery][Required()] int pesajeArticuloId)
        {
            logger.Info($"Entró al método ObtenerPesajesRecepcion en PesajeApi con el parámetro pesajeArticuloId = {pesajeArticuloId}");

            try
            {
                BLPesaje bLPesaje = new BLPesaje();

                List<BOPesaje> bOPesajes = bLPesaje.ObtenerPesajesRecepcion(pesajeArticuloId);

                List<PesajeResponse> pesajesResponse = this.mapper.Map<List<BOPesaje>, List<PesajeResponse>>(bOPesajes);

                return Ok(pesajesResponse);
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }
        }
        #endregion

        #region Constructores
        /// <summary>
        /// 
        /// </summary>
        /// <param name="mapper"></param>
        public PesajeApiController(IMapper mapper)
        {
            this.mapper = mapper;
        }
        #endregion
    }
}
