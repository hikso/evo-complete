// <auto-generated />
using System;
using EVO_DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EVO_DataAccess.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20190809152140_1_crear_tablas")]
    partial class _1_crear_tablas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EVO_DataAccess.Entities.EFFuncionalidad", b =>
                {
                    b.Property<int>("FuncionalidadId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Inactivo");

                    b.Property<int>("ModuloId");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("FuncionalidadId");

                    b.HasIndex("ModuloId");

                    b.ToTable("Funcionalidades");
                });

            modelBuilder.Entity("EVO_DataAccess.Entities.EFFuncionalidadesxRol", b =>
                {
                    b.Property<int>("FuncionalidadesxRolId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FuncionalidadId");

                    b.Property<int>("RolId");

                    b.HasKey("FuncionalidadesxRolId");

                    b.HasIndex("FuncionalidadId");

                    b.HasIndex("RolId");

                    b.ToTable("FuncionalidadesxRol");
                });

            modelBuilder.Entity("EVO_DataAccess.Entities.EFModulo", b =>
                {
                    b.Property<int>("ModuloID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Inactivo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("ModuloID");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("EVO_DataAccess.Entities.EFParametroGeneral", b =>
                {
                    b.Property<int>("ParametroGeneralId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Inactivo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("ParametroGeneralId");

                    b.ToTable("ParametrosGenerales");
                });

            modelBuilder.Entity("EVO_DataAccess.Entities.EFRegistroAuditoria", b =>
                {
                    b.Property<int>("RegistroAuditoriaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<int>("UsuarioId");

                    b.HasKey("RegistroAuditoriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RegistrosAuditoria");
                });

            modelBuilder.Entity("EVO_DataAccess.Entities.EFRol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Inactivo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("RolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EVO_DataAccess.Entities.EFUsuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Inactivo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EVO_DataAccess.Entities.EFUsuariosxRol", b =>
                {
                    b.Property<int>("UsuariosxRolId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RolId");

                    b.Property<int>("UsuarioId");

                    b.HasKey("UsuariosxRolId");

                    b.HasIndex("RolId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosxRol");
                });

            modelBuilder.Entity("EVO_DataAccess.Entities.EFFuncionalidad", b =>
                {
                    b.HasOne("EVO_DataAccess.Entities.EFModulo", "Modulo")
                        .WithMany("Funcionalidades")
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EVO_DataAccess.Entities.EFFuncionalidadesxRol", b =>
                {
                    b.HasOne("EVO_DataAccess.Entities.EFFuncionalidad", "Funcionalidad")
                        .WithMany("FuncionalidadesxRol")
                        .HasForeignKey("FuncionalidadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EVO_DataAccess.Entities.EFRol", "Rol")
                        .WithMany("FuncionalidadesxRol")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EVO_DataAccess.Entities.EFRegistroAuditoria", b =>
                {
                    b.HasOne("EVO_DataAccess.Entities.EFUsuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EVO_DataAccess.Entities.EFUsuariosxRol", b =>
                {
                    b.HasOne("EVO_DataAccess.Entities.EFRol", "Rol")
                        .WithMany("UsuariosxRol")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EVO_DataAccess.Entities.EFUsuario", "Usuario")
                        .WithMany("UsuariosxRol")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
