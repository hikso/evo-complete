/*
 * API de Vendedores
 *
 * API de administración de Vendedores 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jusuga@digitalcg.com.co
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using EVO_BusinessObjects.Exceptions;
using EVO_PV_BusinessLogic;
using EVO_PV_BusinessObjects;
using EVO_PV_BusinessObjects.Utils;
using EVO_PV_WebApi.Models;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using NLog;
using Swashbuckle.Swagger.Annotations;
using System.Collections.Generic;

namespace EVO_PV_WebApi.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class VendedoresApiController : BaseController
    {
        #region Campos Privados
        private static readonly Logger logger = LogManager.GetCurrentClassLogger();
        #endregion

        /// <summary>
        /// Obtiene los vendedores por punto de venta
        /// </summary>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("/api/vendedores/puntoventa")]
        [SwaggerOperation("ObtenerVendedoresxPuntoVenta")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<VendedorResponse>), description: "Operación realizada con éxito")]
        public virtual IActionResult ObtenerVendedoresxPuntoVenta()
        {
            logger.Info("Entró al método ObtenerVendedoresxPuntoVenta en VendedoresApi - EVO_PV_WebApi");

            try
            {
                VendedoresBL vendedoresBL = new VendedoresBL();

                AppConfiguration appConfiguration = new AppConfiguration();

                string codigoPuntoVenta = appConfiguration.AppSettings["CODIGO_PUNTO_VENTA"].ToString();

                List<VendedorResponseBO> vendedoresResponseBO = vendedoresBL.ObtenerVendedoresxPuntoVenta(codigoPuntoVenta);

                List<VendedorResponse> vendedoresResponse = this.mapper.Map<List<VendedorResponseBO>,List<VendedorResponse>>(vendedoresResponseBO);

                return Ok(vendedoresResponse);
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError);
            }
        }
    }
}
