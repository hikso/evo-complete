/*
 * API de Configuración General
 *
 * API de configuración general del sistema EVO
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jegiraldo@porcicarnes.com.co
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using EVO_PV_BusinessLogic;
using EVO_PV_BusinessObjects;
using EVO_PV_WebApi.Models.ConfigApi;
using Swashbuckle.Swagger.Annotations;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using System.IO;

namespace EVO_PV_WebApi.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    public class ConfigApiController : BaseController
    {
        /// <summary>
        /// Retorna la versión actual del sistema EVO.
        /// </summary>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("api/config/ObtenerVersionActual")]
        [SwaggerOperation("ObtenerVersionActual")]
        [SwaggerResponse(statusCode: 200, type: typeof(VersionResponse), description: "Operación realizada con éxito")]
        public VersionResponse ObtenerVersionActual()
        {
            try
            { 
                

                ConfigBL configBL = new ConfigBL();

                var versionActual = configBL.ObtenerVersionActual();

                var versionResponse = this.mapper.Map<ObtenerVersion, VersionResponse>(versionActual);

                return versionResponse;
            }
            catch
            {
                throw;
            }
        }

        /// <summary>
        /// Obtiene un Parámetro General por su nombre.
        /// </summary>
        /// <param name="nombre">Nombre del Parámetro General</param>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("api/config/obtenerxnombre/{nombre}")]
        [SwaggerOperation("ObtenerParametroGeneralxNombre")]
        [SwaggerResponse(statusCode: 200, type: typeof(ParametroGeneralResponse), description: "Operación realizada con éxito")]
        public ParametroGeneralResponse ObtenerParametroGeneralxNombre(string nombre)
        {
            try
            {
                ConfigBL configBL = new ConfigBL();

                ParametroGeneral parametroGeneral = configBL.ObtenerParametroGeneralxNombre(nombre);

                ParametroGeneralResponse respuesta = null;

                respuesta = this.mapper.Map<ParametroGeneral, ParametroGeneralResponse>(parametroGeneral);

                return respuesta;

            }
            catch
            {
                throw;
            }
        }

    }
}