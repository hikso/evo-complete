<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:EVO_PV">


    <!--
        |
        | Style for the view Main Window
        |
    -->

    <!--  Style for the Listview - Menu lateral  -->
    <Style
        x:Key="ListviewSimple"
        BasedOn="{StaticResource {x:Type ListView}}"
        TargetType="{x:Type ListView}">
        <Setter Property="Foreground" Value="#999999" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="SelectionMode" Value="Single" />
    </Style>

    <!--  Style for the items of the listview - Menu Lateral  -->
    <Style
        x:Key="ListViewItemStyle"
        BasedOn="{StaticResource {x:Type ListViewItem}}"
        TargetType="{x:Type ListViewItem}">

        <!--  Normal Background  -->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#999999" />

        <!--  Background is selected and is Mouse Over items of the Listviews  -->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#F5B90E" />
                <Setter Property="BorderThickness" Value="0,0,0,0" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#f5B90E" />
            </Trigger>
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F5B90E"/>
                <Setter Property="BorderThickness" Value="0,0,0,0"/>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#f5B90E"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <!--  Style ListViewItem  -->
    <Style
        x:Key="MenuItem"
        BasedOn="{StaticResource {x:Type ListViewItem}}"
        TargetType="{x:Type ListViewItem}">
        <Setter Property="Height" Value="60" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#999999" />

        <!--  Background is selected and is Mouse Over items of the Listviews  -->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#F5B90E" />
                <Setter Property="BorderThickness" Value="0,0,0,0" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#f5B90E" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F5B90E" />
                <Setter Property="BorderThickness" Value="0,0,0,0" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#f5B90E" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Style content ListViewItem  -->
    <Style x:Key="ContentMenuItem" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Margin" Value="2,0" />
    </Style>

    <!--  style text Icon Menu simple  -->
    <Style
        x:Key="TextMenuItem"
        BasedOn="{StaticResource {x:Type ListBoxItem}}"
        TargetType="{x:Type ListBoxItem}">
        <Setter Property="Padding" Value="47,20" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#999999" />

        <!--  Background is selected and is Mouse Over items of the Listviews  -->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#F5B90E" />
                <Setter Property="BorderThickness" Value="0,0,0,0" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#f5B90E" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F5B90E" />
                <Setter Property="BorderThickness" Value="0,0,0,0" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#f5B90E" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Style Scroll Lateral Menu  -->
    <Style
        x:Key="ScrollMenu"
        BasedOn="{StaticResource {x:Type ScrollViewer}}"
        TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="CanContentScroll" Value="True" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <!--  Style Button ScrollBar on the Scrollviewer  -->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="Grid">
                        <Rectangle
                            Width="Auto"
                            Height="Auto"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="Transparent" />
                        <Border
                            x:Name="Rectangle1"
                            Width="6"
                            Height="Auto"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style General Scrollbars on the all pages  -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Foreground" Value="#999999" />
        <Setter Property="Background" Value="DarkGray" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid
                        x:Name="GridRoot"
                        Width="8"
                        Background="{x:Null}">
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="0"
                            Focusable="False"
                            IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb
                                    x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageUp"
                                    Command="ScrollBar.PageDownCommand"
                                    Focusable="False"
                                    Opacity="0" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageDown"
                                    Command="ScrollBar.PageUpCommand"
                                    Focusable="False"
                                    Opacity="0" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ButtonSelectBrush}" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource DarkBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="12" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style Expander item Menu  -->
    <Style
        x:Key="ExpanderMenu"
        BasedOn="{StaticResource {x:Type Expander}}"
        TargetType="{x:Type Expander}">
        <Setter Property="Width" Value="220" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="20,10,-10,0" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground" Value="#999999" />
        <Setter Property="Padding" Value="-20,0,20,0" />
    </Style>
    <!--  Style Expander item Menu  -->
    <Style
        x:Key="ExpanderArticles"
        BasedOn="{StaticResource {x:Type Expander}}"
        TargetType="{x:Type Expander}">
        <Setter Property="Margin" Value="-100,-100,-100,-100" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="BorderThickness" Value=".6,.6,.6,.6" />
    </Style>

    <!--  Effect for the Menu Open  -->
    <Storyboard x:Key="MenuOpen">

        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="GridMenu" Storyboard.TargetProperty="(FrameworkElement.Width)">
            <EasingDoubleKeyFrame KeyTime="0" Value="70" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="250" />
        </DoubleAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentImg" Storyboard.TargetProperty="(FrameworkElement.Height)">
            <EasingDoubleKeyFrame KeyTime="0" Value="80" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="100" />
        </DoubleAnimationUsingKeyFrames>

    </Storyboard>

    <!--  Effect for the Menu Close  -->
    <Storyboard x:Key="MenuClose">

        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="GridMenu" Storyboard.TargetProperty="(FrameworkElement.Width)">
            <EasingDoubleKeyFrame KeyTime="0" Value="250" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="70" />
        </DoubleAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentImg" Storyboard.TargetProperty="(FrameworkElement.Height)">
            <EasingDoubleKeyFrame KeyTime="0" Value="100" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="80" />
        </DoubleAnimationUsingKeyFrames>

    </Storyboard>

    <!--  Style  for the Principal GridMenu  -->
    <Style x:Key="GridMenu" TargetType="{x:Type Grid}">
        <!--  Normal Background  -->
        <Setter Property="Width" Value="250" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <!--  style Content button Logo of the Menu  -->
    <Style x:Key="ContentLogo" TargetType="{x:Type StackPanel}">
        <!--  Normal Background  -->
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />

    </Style>

    <!--  Button Corporate Logo Menu Open  -->
    <Style
        x:Key="LogoEvoOpen"
        BasedOn="{StaticResource {x:Type Button}}"
        TargetType="{x:Type Button}">
        <Setter Property="Width" Value="150" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="90" />
    </Style>

    <Style
        x:Key="DataGridStyle"
        BasedOn="{StaticResource {x:Type DataGrid}}"
        TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="White" />
    </Style>

    <!--  Button Corporate Logo Menu Close  -->
    <Style
        x:Key="LogoEvoClose"
        BasedOn="{StaticResource {x:Type Button}}"
        TargetType="{x:Type Button}">
        <Setter Property="Width" Value="60" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <!--  Line  -->
    <Style x:Key="Line" TargetType="{x:Type Rectangle}">
        <Setter Property="Margin" Value="10,0,10,0" />
        <Setter Property="Height" Value="1" />
        <Setter Property="Fill" Value="#d7d7d7" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <!--  Style ContentPage  -->
    <Style x:Key="ContentPage" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#eee" />
        <Setter Property="Margin" Value="0,0,0,0" />
    </Style>

    <!--  Style ScrollView ContenPage  -->
    <Style
        x:Key="GeneralScroll"
        BasedOn="{StaticResource {x:Type ScrollViewer}}"
        TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <!--  Style principal Frame contenpage  -->
    <Style
        x:Key="PrincipalFrame"
        BasedOn="{StaticResource {x:Type Frame}}"
        TargetType="{x:Type Frame}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="NavigationUIVisibility" Value="Hidden" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>


    <!--
        |
        | Style Dashboard View
        |
    -->

    <!--  Style for the principal grid of the Dashboard  -->
    <Style x:Key="GridDasboard" TargetType="Grid">
        <Setter Property="Background" Value="#eee" />
    </Style>

    <!--  Style Rectangle white item Dashboard  -->
    <Style x:Key="RectangleDashboard" TargetType="{x:Type Rectangle}">
        <Setter Property="Height" Value="140" />
        <Setter Property="Margin" Value="20,35,20,0" />
        <Setter Property="Fill" Value="White" />
        <Setter Property="RadiusY" Value="5" />
        <Setter Property="RadiusY" Value="5" />
    </Style>

    <!--  Style  for the text header view with additional information  -->
    <Style
        x:Key="DataText"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13px" />
        <Setter Property="Margin" Value="15,0,0,0" />
    </Style>
    <!--  Style  for the text header view with additional information  -->
    <Style
        x:Key="TextDocumentsAttached"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14px" />
        <Setter Property="Margin" Value="25,0,0,20" />
        <Setter Property="Foreground" Value="#7F0E06" />
        <Setter Property="FontWeight" Value="DemiBold" />
    </Style>

    <!--  Style  for the text header view with additional information  -->
    <Style
        x:Key="TextMessage"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Margin" Value="45,20,0,0" />
    </Style>

    <!--  Style  for the text header view with additional information  -->
    <Style
        x:Key="InfoDataText"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13px" />
        <Setter Property="Margin" Value="15,20,0,0" />
        <Setter Property="Foreground" Value="#7F0E06" />
    </Style>

    <!--  Style Grid content item Dashboard  -->
    <Style x:Key="ContentDashboard" TargetType="{x:Type Grid}">
        <Setter Property="Height" Value="140" />
        <Setter Property="Margin" Value="28" />
    </Style>

    <!--  Style Grid content icon Dashboard  -->
    <Style x:Key="ContentIconDashboard" TargetType="{x:Type Grid}">
        <Setter Property="Height" Value="90" />
        <Setter Property="Width" Value="175" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0" />
    </Style>

    <!--  Style Grid Border content icon Dashboard  -->
    <Style x:Key="BorderContent" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Background" Value="#FFFFAF24" />
    </Style>

    <!--  Style Line divide content icon Dashboard  -->
    <Style x:Key="divide" TargetType="{x:Type Rectangle}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Fill" Value="#d7d7d7" />
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="10,70,10,0" />
    </Style>

    <!--  Style StackPanel  content icon Dashboard  -->
    <Style x:Key="ContentText" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <!--  Style TextBlock content icon Dashboard  -->
    <Style x:Key="TextDashboard" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#999999" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <!--
        |
        | Style general for the views structure
        |
    -->

    <!--  Style icon title  -->
    <Style x:Key="IconCard" TargetType="{x:Type Grid}">
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="60" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="50,-20,0,0" />
    </Style>

    <!--  Style icon title  -->
    <Style x:Key="IconCardButton" TargetType="{x:Type Grid}">
        <Setter Property="Height" Value="80" />
        <Setter Property="Width" Value="90" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="10,-20,0,0" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <!--  Style Content Card  -->
    <Style x:Key="ContentCard" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="20,60,20,0" />
    </Style>

    <!--  Style Border Card  -->
    <Style x:Key="BorderCard" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Background" Value="#FFFFAF24" />
    </Style>

    <!--  Style Border Card  -->
    <Style x:Key="BorderCardButton" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <!--  Style Grid Title  -->
    <Style x:Key="Title" TargetType="{x:Type Grid}">
        <Setter Property="VerticalAlignment" Value="top" />
    </Style>

    <!--  Style Content Title  -->
    <Style x:Key="ContentTitle" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="130,10,0,0" />
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>

    <!--  Style Text Title  -->
    <Style x:Key="TextTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="#3C4858" />
    </Style>

    <!--
        |
        | Style general for the Header View Details
        |
    -->

    <!--  Style for the header View with additional information  -->
    <Style
        x:Key="HeaderView"
        BasedOn="{StaticResource {x:Type StackPanel}}"
        TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>
    <!--  DatePickerStyle  -->
    <!--<Style
        x:Key="DatePickerStyle"
        BasedOn="{StaticResource {x:Type DatePicker}}"
        TargetType="{x:Type DatePicker}">
        <Setter Property="Margin" Value="15,-5,0,0" />
        <Setter Property="Width" Value="150" />
    </Style>-->
    <!--  DatePickerStyle  -->
    <Style x:Key="DatePickerStyle" TargetType="{x:Type DatePicker}">
        <Setter Property="Width" Value="150" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="TextBlock.Height" Value="25" />
        <Style.Resources>
            <!--  Reset the Button style inside the DatePicker to default values  -->
            <Style TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="0,-90,0,0" />
            </Style>
        </Style.Resources>
    </Style>

    <!--  Style  for the text header view with additional information  -->
    <Style
        x:Key="TextHeaderView"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#7F0E06" />
        <Setter Property="FontSize" Value="13px" />
        <Setter Property="Margin" Value="15,0,0,0" />
    </Style>

    <!--  Style  for the text header view with additional information  -->
    <Style
        x:Key="TextHeaderViewForInvoice"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#7F0E06" />
        <Setter Property="FontSize" Value="13px" />
        <Setter Property="Margin" Value="15,-7,0,0" />
    </Style>

    <Style
        x:Key="TextHeaderViewBascule"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#7F0E06" />
        <Setter Property="FontSize" Value="20px" />
        <Setter Property="Margin" Value="15,0,0,0" />
    </Style>

    <!--  Style  for the text header view with additional information  -->
    <Style
        x:Key="DataTextBascule"
        BasedOn="{StaticResource {x:Type TextBox}}"
        TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="30px" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Margin" Value="15,0,0,0" />
        <Setter Property="Padding" Value="0,0,5,0" />
        <Setter Property="BorderBrush" Value="#65686e" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="TextAlignment" Value="Right" />
    </Style>

    <Style
        x:Key="TextTotalView"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#7F0E06" />
        <Setter Property="FontSize" Value="12px" />
        <Setter Property="Margin" Value="150,0,0,0" />
    </Style>
    <Style
        x:Key="MyCalendarStyle"
        BasedOn="{DynamicResource {x:Type Calendar}}"
        TargetType="{x:Type Calendar}">
        <Setter Property="Background" Value="Red" />
    </Style>
    <Style
        x:Key="DateCreation"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10,1,0,0" />
    </Style>

    <Style
        x:Key="ComboBoxStyle"
        BasedOn="{StaticResource {x:Type ComboBox}}"
        TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="10,-5,0,0" />
        <Setter Property="Width" Value="200" />
    </Style>

    <Style
        x:Key="ComboBoxStyleGrid"
        BasedOn="{StaticResource {x:Type ComboBox}}"
        TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="0,0,20,0" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <!--  Style for the header View Edit order List  -->
    <Style
        x:Key="HeaderViewEdit"
        BasedOn="{StaticResource {x:Type StackPanel}}"
        TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="Orientation" Value="Vertical" />
    </Style>
    <!--  Style for labels  -->
    <Style x:Key="LabelStyleMessage" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Margin" Value="15,4" />
        <Setter Property="Foreground" Value="#7F0E06" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>
    <!--  Style for labels  -->
    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="15,4" />
        <Setter Property="Foreground" Value="#7F0E06" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FontWeight" Value="DemiBold" />
    </Style>

    <!--  Style fot textbox  -->
    <Style x:Key="TextBoxStyleForSumariesDisabled" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="150" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="0,-10" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
    </Style>

    <!--  Style fot textbox  -->
    <Style x:Key="TextBoxStyleForSumaries" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="150" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="0,-10" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>
    <!--  Style fot textbox  -->
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="MaxWidth" Value="200" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="20,0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <!--  Style for textbox  invoice  -->
    <Style x:Key="TextBoxInvoiceStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="5,-30,5,0" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
    </Style>
    <!--  Style for textbox  invoice  -->
    <Style x:Key="TextBoxInvoiceStyleDisabled" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="5,-30,5,0" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
    </Style>

    <!--  Style for textbox  invoice  -->
    <Style x:Key="TextBoxInvoiceStyleForNumber" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="5,-30,5,0" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="TextAlignment" Value="Right" />
    </Style>


    <!--  Style for textbox  invoice  -->
    <Style x:Key="TextBoxInvoiceStyleForNumberDisabled" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="5,-30,5,0" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="TextAlignment" Value="Right" />
    </Style>

    <!--  Style for textbox  invoice  -->
    <Style x:Key="TextBoxInvoiceStyleForInvoiceBascule" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="5" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,10,0,20" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="TextAlignment" Value="Right" />
    </Style>



    <!--  Spinner styles  -->

    <Color
        x:Key="FilledColor"
        A="255"
        B="155"
        G="155"
        R="155" />
    <Color
        x:Key="UnfilledColor"
        A="0"
        B="155"
        G="155"
        R="155" />

    <Style x:Key="BusyAnimationStyle" TargetType="Control">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <ControlTemplate.Resources>
                        <Storyboard
                            x:Key="Animation0"
                            BeginTime="00:00:00.0"
                            RepeatBehavior="Forever">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse0" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}" />
                                <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard
                            x:Key="Animation1"
                            BeginTime="00:00:00.2"
                            RepeatBehavior="Forever">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}" />
                                <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard
                            x:Key="Animation2"
                            BeginTime="00:00:00.4"
                            RepeatBehavior="Forever">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}" />
                                <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard
                            x:Key="Animation3"
                            BeginTime="00:00:00.6"
                            RepeatBehavior="Forever">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse3" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}" />
                                <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard
                            x:Key="Animation4"
                            BeginTime="00:00:00.8"
                            RepeatBehavior="Forever">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse4" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}" />
                                <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard
                            x:Key="Animation5"
                            BeginTime="00:00:01.0"
                            RepeatBehavior="Forever">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse5" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}" />
                                <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard
                            x:Key="Animation6"
                            BeginTime="00:00:01.2"
                            RepeatBehavior="Forever">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse6" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}" />
                                <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard
                            x:Key="Animation7"
                            BeginTime="00:00:01.4"
                            RepeatBehavior="Forever">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse7" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}" />
                                <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsVisible" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Storyboard0" Storyboard="{StaticResource Animation0}" />
                                <BeginStoryboard x:Name="Storyboard1" Storyboard="{StaticResource Animation1}" />
                                <BeginStoryboard x:Name="Storyboard2" Storyboard="{StaticResource Animation2}" />
                                <BeginStoryboard x:Name="Storyboard3" Storyboard="{StaticResource Animation3}" />
                                <BeginStoryboard x:Name="Storyboard4" Storyboard="{StaticResource Animation4}" />
                                <BeginStoryboard x:Name="Storyboard5" Storyboard="{StaticResource Animation5}" />
                                <BeginStoryboard x:Name="Storyboard6" Storyboard="{StaticResource Animation6}" />
                                <BeginStoryboard x:Name="Storyboard7" Storyboard="{StaticResource Animation7}" />
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Storyboard0" />
                                <StopStoryboard BeginStoryboardName="Storyboard1" />
                                <StopStoryboard BeginStoryboardName="Storyboard2" />
                                <StopStoryboard BeginStoryboardName="Storyboard3" />
                                <StopStoryboard BeginStoryboardName="Storyboard4" />
                                <StopStoryboard BeginStoryboardName="Storyboard5" />
                                <StopStoryboard BeginStoryboardName="Storyboard6" />
                                <StopStoryboard BeginStoryboardName="Storyboard7" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>

                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Canvas Width="60" Height="60">
                                <Canvas.Resources>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Width" Value="15" />
                                        <Setter Property="Height" Value="15" />
                                        <Setter Property="Fill" Value="#009B9B9B" />
                                    </Style>
                                </Canvas.Resources>

                                <Ellipse
                                    x:Name="ellipse0"
                                    Canvas.Left="1.75"
                                    Canvas.Top="21" />
                                <Ellipse
                                    x:Name="ellipse1"
                                    Canvas.Left="6.5"
                                    Canvas.Top="7" />
                                <Ellipse
                                    x:Name="ellipse2"
                                    Canvas.Left="20.5"
                                    Canvas.Top="0.75" />
                                <Ellipse
                                    x:Name="ellipse3"
                                    Canvas.Left="34.75"
                                    Canvas.Top="6.75" />
                                <Ellipse
                                    x:Name="ellipse4"
                                    Canvas.Left="40.5"
                                    Canvas.Top="20.75" />
                                <Ellipse
                                    x:Name="ellipse5"
                                    Canvas.Left="34.75"
                                    Canvas.Top="34.5" />
                                <Ellipse
                                    x:Name="ellipse6"
                                    Canvas.Left="20.75"
                                    Canvas.Top="39.75" />
                                <Ellipse
                                    x:Name="ellipse7"
                                    Canvas.Left="7"
                                    Canvas.Top="34.25" />
                                <Ellipse
                                    Canvas.Left="8.75"
                                    Canvas.Top="8"
                                    Width="39.5"
                                    Height="39.5"
                                    Visibility="Hidden" />
                            </Canvas>
                            <Label
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{Binding Path=Text}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>