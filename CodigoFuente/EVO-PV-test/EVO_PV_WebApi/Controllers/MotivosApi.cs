/*
 * API de Motivos
 *
 * API de administración de Motivos 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jusuga@digitalcg.com.co
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using AutoMapper;
using EVO_PV_BusinessLogic;
using EVO_PV_BusinessObjects;
using EVO_PV_WebApi.Models.MotivosApi;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using NLog;
using Swashbuckle.Swagger.Annotations;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace EVO_PV_WebApi.Controllers
{
    /// <summary>
    /// 
    /// </summary>    
    [ApiController]
    [Authorize]
    public class MotivosApiController : BaseController
    {
        #region Campos Privados
        private static readonly Logger logger = LogManager.GetCurrentClassLogger();      
        #endregion       

        #region Métodos públicos
        /// <summary>
        /// Obtiene motivos de edición asociados a las entregas
        /// </summary>
        /// <param name="procesoId">Indica el id del proceso</param>       
        /// <response code="200">Operación realizada con éxito</response>
        ///TODO:Cambio en yaml del parámetro
        [HttpGet]
        [Route("/api/motivos")]
        //[ValidateModelState]
        [SwaggerOperation("ObtenerMotivos")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<MotivoResponse>), description: "Operación realizada con éxito")]
        public virtual IActionResult ObtenerMotivos([FromQuery][Required()] int procesoId)
        {
            logger.Info($"Entró al método ObtenerMotivos en EVO_PV_WebApi MotivosApi con el parámetro procesoId = {procesoId}");

            try
            {
                BLMotivo bLMotivos = new BLMotivo();

                List<MotivoRespuesta> motivos = bLMotivos.ObtenerMotivos(procesoId);

                List<MotivoResponse> motivosResponse =

                this.mapper.Map<List<MotivoRespuesta>, List<MotivoResponse>>(motivos);

                return Ok(motivosResponse);
            }
            catch (Exception e)
            {
                throw e;
            }
        }
        #endregion
    }
}
