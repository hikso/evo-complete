/*
 * API de administración de Facturación
 *
 * API de administración de facturación 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jusuga@digitalcg.com.co
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using EVO_BusinessObjects.Exceptions;
using EVO_PV_BusinessLogic;
using EVO_PV_BusinessObjects;
using EVO_PV_Proxy.Models.FacturacionApi;
using EVO_PV_WebApi.AutoMapperConfig;
using EVO_PV_WebApi.Resources;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using NLog;
using Swashbuckle.Swagger.Annotations;
using System.Collections.Generic;

namespace EVO_PV_WebApi.Controllers 
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class FacturacionApiController :  BaseController
    {
        #region Campos Privados
        private static readonly Logger logger = LogManager.GetCurrentClassLogger();
      
        #endregion

        #region Métodos
        /// <summary>
        /// Obtiene las otras formas de pago
        /// </summary>
        /// <response code="200">Operación realizada con éxito</response>
        [HttpGet]
        [Route("/api/facturacion/otrasformaspago")]      
        [SwaggerOperation("ObtenerOtrasFormasPago")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<OtraFormaPagoResponse>), description: "Operación realizada con éxito")]
        public virtual IActionResult ObtenerOtrasFormasPago()
        {

            logger.Info($"Entró al método ObtenerOtrasFormasPago en FacturacionApi en EVO_PV_WebApi ");

            try
            {

                BLFacturacion blFacturacion = new BLFacturacion();

                List<OtraFormaPagoBO> otrasFormaPago = blFacturacion.ObtenerOtrasFormasPago();

                List<OtraFormaPagoResponse> otrasFormasPagoResponse = this.mapper.Map<List<OtraFormaPagoBO>, List<OtraFormaPagoResponse>>(otrasFormaPago);

                return Ok(otrasFormasPagoResponse);
            }
            catch (EVOException e)
            {
                return StatusCode(StatusCodes.Status400BadRequest, e.Message);
            }
            catch
            {
                return StatusCode(StatusCodes.Status500InternalServerError, errores.errGeneral);
            }
        }
        #endregion       
    }
}
