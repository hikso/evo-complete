<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EVO_PB">


    <!--
    |
    | Style for the view Main Window
    |
    -->
    
    <!-- Style for the Listview - Menu lateral -->
    <Style x:Key="ListviewSimple" TargetType="{ x:Type ListView }" BasedOn="{ StaticResource {x:Type ListView }}">
        <Setter Property="Foreground" Value="#999999" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="SelectionMode" Value="Single" />
    </Style>
    
    <!-- Style for the items of the listview - Menu Lateral -->
    <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
    
        <!-- Normal Background -->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#999999" />

        <!-- Background is selected and is Mouse Over items of the Listviews  -->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#F5B90E"/>
                <Setter Property="BorderThickness" Value="0,0,0,0"/>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#f5B90E"/>
            </Trigger>
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F5B90E"/>
                <Setter Property="BorderThickness" Value="0,0,0,0"/>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#f5B90E"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>
    
    <!-- Style ListViewItem -->
    <Style x:Key="MenuItem" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#999999" />

        <!-- Background is selected and is Mouse Over items of the Listviews  -->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#F5B90E"/>
                <Setter Property="BorderThickness" Value="0,0,0,0"/>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#f5B90E"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F5B90E"/>
                <Setter Property="BorderThickness" Value="0,0,0,0"/>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#f5B90E"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Style content ListViewItem-->
    <Style x:Key="ContentMenuItem" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Margin" Value="2 0" />
    </Style>
           
    <!-- style text Icon Menu simple -->
    <Style x:Key="TextMenuItem" TargetType="{ x:Type ListBoxItem }" BasedOn="{ StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Padding" Value="47 20"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#999999" />

        <!-- Background is selected and is Mouse Over items of the Listviews  -->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#F5B90E"/>
                <Setter Property="BorderThickness" Value="0,0,0,0"/>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#f5B90E"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F5B90E"/>
                <Setter Property="BorderThickness" Value="0,0,0,0"/>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#f5B90E"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Style Scroll Lateral Menu-->
    <Style x:Key="ScrollMenu" TargetType="{x:Type ScrollViewer}" BasedOn="{ StaticResource {x:Type ScrollViewer}}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="CanContentScroll" Value="True"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <!-- Style Button ScrollBar on the Scrollviewer -->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" 
                                           Height="Auto" Fill="Transparent"/>
                        <Border x:Name="Rectangle1" CornerRadius="4" HorizontalAlignment="Stretch" 
                                        VerticalAlignment="Stretch" Width="6" Height="Auto" 
                                        Background="{TemplateBinding Background}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto"/>
                            <Setter TargetName="Rectangle1" Property="Height" Value="6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style General Scrollbars on the all pages -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Foreground" Value="#999999"/>
        <Setter Property="Background" Value="DarkGray"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="8" Background="{x:Null}">
                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="False">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" 
                                               Style="{DynamicResource ScrollThumbs}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="False"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="False"/>
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" 
                                            TargetName="Thumb" Property="Background"/>
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="Height" Value="12"/>
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal"/>
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand"/>
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Style Expander item Menu -->
    <Style x:Key="ExpanderMenu" TargetType="{x:Type Expander }" BasedOn="{ StaticResource { x:Type Expander }}">
        <Setter Property="Width" Value="220" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="20 10 -10 0" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground" Value="#999999" />
        <Setter Property="Padding" Value="-20 0 20 0" />
    </Style>
    
    <!-- Effect for the Menu Open -->
    <Storyboard x:Key="MenuOpen">
        
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
            <EasingDoubleKeyFrame KeyTime="0" Value="70"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="250"/>
        </DoubleAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="contentImg">
            <EasingDoubleKeyFrame KeyTime="0" Value="80"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="100"/>
        </DoubleAnimationUsingKeyFrames>

    </Storyboard>

    <!-- Effect for the Menu Close -->
    <Storyboard x:Key="MenuClose">

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
            <EasingDoubleKeyFrame KeyTime="0" Value="250"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="70"/>
        </DoubleAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="contentImg">
            <EasingDoubleKeyFrame KeyTime="0" Value="100"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="80"/>
        </DoubleAnimationUsingKeyFrames>

    </Storyboard>

    <!-- Style  for the Principal GridMenu -->
    <Style x:Key="GridMenu" TargetType="{x:Type Grid}" >
        <!--Normal Background-->
        <Setter Property="Width" Value="250"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    
    <!-- style Content button Logo of the Menu -->
    <Style x:Key="ContentLogo" TargetType="{x:Type StackPanel}" >
        <!--Normal Background-->
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>

    </Style>

    <!-- Button Corporate Logo Menu Open  -->
    <Style x:Key="LogoEvoOpen" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="90"/>
    </Style>

    <!-- Button Corporate Logo Menu Close  -->
    <Style x:Key="LogoEvoClose" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="60"/>
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>
    
    <!-- Line -->
    <Style x:Key="Line" TargetType="{x:Type Rectangle}" >
        <Setter Property="Margin" Value="10,0,10,0"/>
        <Setter Property="Height" Value="1"/>
        <Setter Property="Fill" Value="#d7d7d7" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>
    
    <!-- Style ContentPage -->
    <Style x:Key="ContentPage" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#eee"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
    </Style>
    
    <!-- Style ScrollView ContenPage -->
    <Style x:Key="GeneralScroll" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource {x:Type ScrollViewer}}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    </Style>
    
    <!-- Style principal Frame contenpage -->
    <Style x:Key="PrincipalFrame" TargetType="{x:Type Frame}" BasedOn="{StaticResource {x:Type Frame}}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="NavigationUIVisibility" Value="Hidden" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    </Style>

    
    <!--
    |
    | Style Dashboard View
    |
    -->

    <!-- Style for the principal grid of the Dashboard-->
    <Style x:Key="GridDasboard" TargetType="Grid">
        <Setter Property="Background" Value="#eee"/>
    </Style>
    
    <!-- Style Rectangle white item Dashboard -->
    <Style x:Key="RectangleDashboard" TargetType="{ x:Type Rectangle}">
        <Setter Property="Height"  Value="140" />
        <Setter Property="Margin" Value="20, 35, 20, 0" />
        <Setter Property="Fill" Value="White" />
        <Setter Property="RadiusY" Value="5" />
        <Setter Property="RadiusY" Value="5" />
    </Style>
    
    <!-- Style Grid content item Dashboard -->
    <Style x:Key="ContentDashboard" TargetType="{x:Type Grid}">
        <Setter Property="Height" Value="140" />
        <Setter Property="Margin" Value="28" />
    </Style>

    <!-- Style Grid content icon Dashboard -->
    <Style x:Key="ContentIconDashboard" TargetType="{ x:Type Grid }">
        <Setter Property="Height" Value="90" />
        <Setter Property="Width" Value="175" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10 0"/>
    </Style>

    <!-- Style Grid Border content icon Dashboard -->
    <Style x:Key="BorderContent" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Background" Value="#FFFFAF24"/>
    </Style>

    <!-- Style Line divide content icon Dashboard -->
    <Style x:Key="divide" TargetType="{x:Type Rectangle}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Fill" Value="#d7d7d7" />
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="10 70 10 0" />
    </Style>

    <!-- Style StackPanel  content icon Dashboard -->
    <Style x:Key="ContentText" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>
    
    <!-- Style TextBlock content icon Dashboard -->
    <Style x:Key="TextDashboard" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="#999999"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    
    <!--
    |
    | Style general for the views structure 
    |
    -->

    <!-- Style icon title -->
    <Style x:Key="IconCard" TargetType="{x:Type Grid}">
        <Setter Property="Height" Value="60"/>
        <Setter Property="Width" Value="60" />
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="50 -20 0 0"/>
    </Style>

    <!-- Style Content Card-->
    <Style x:Key="ContentCard" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="20 60 20 0" />
    </Style>

    <Style x:Key="ContentTabControl" TargetType="{x:Type TabControl}">
        <Style.Resources>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Margin" Value="-4 0 0 0" />
                <Setter Property="Width" Value="100" />
                <Setter Property="Height" Value="40" />
                <Setter Property="Background" Value="#FFFFAF24" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Style.Resources>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Foreground" Value="White" />
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
    </Style>
    
    <!-- Style Border Card -->
    <Style x:Key="BorderCard" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Background" Value="#FFFFAF24" />
    </Style>

    <!-- Style Grid Title-->
    <Style x:Key="Title" TargetType="{x:Type Grid}">
        <Setter Property="VerticalAlignment" Value="top"/>
    </Style>

    <!-- Style Content Title -->
    <Style x:Key="ContentTitle" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="130 10 0 0"/>
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>

    <!-- Style Text Title -->
    <Style x:Key="TextTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="#3C4858" />
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="MaxWidth" Value="200" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="20 0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="15 4" />
        <Setter Property="Foreground" Value="#7F0E06"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <!--
    |
    | Style general for the Header View Details
    |
    -->

    <!-- Style for the header View with additional information-->
    <Style x:Key="HeaderView" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>
    <!-- DatePickerStyle  -->
    <Style x:Key="DatePickerStyle" TargetType="{x:Type DatePicker}" BasedOn="{ StaticResource {x:Type DatePicker}}">
        <Setter Property="Margin" Value="15, -5, 0, 0" />
        <Setter Property="Width" Value="150" />
    </Style>
    <!--Style  for the text header view with additional information -->
    <Style x:Key="TextHeaderView" TargetType="{x:Type TextBlock}" BasedOn="{ StaticResource {x:Type TextBlock}}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#7F0E06"/>
        <Setter Property="FontSize" Value="13px" />
        <Setter Property="Margin" Value="15, 10, 0, 0" />
    </Style>

    <!--Style  for the text header view with additional information -->
    <Style x:Key="DataText" TargetType="{x:Type TextBlock}" BasedOn="{ StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="13px" />
        <Setter Property="Margin" Value="15, 9, 0, 0" />
    </Style>
   
    <!-- DateCreation -->
    <Style x:Key="DateCreation" TargetType="{x:Type TextBlock}" BasedOn="{ StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="10, 4, 0, 0" />
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{ StaticResource {x:Type ComboBox}}">
       <Setter Property="Margin" Value="20, -6, 0, 0"></Setter>
        <Setter Property="Width" Value="120"></Setter>
    </Style>
    
    <!-- Style for the header View Edit order List-->
    <Style x:Key="HeaderViewEdit" TargetType="{x:Type StackPanel}" BasedOn="{ StaticResource {x:Type StackPanel}}">
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="Orientation" Value="Vertical" />
    </Style>

</ResourceDictionary>