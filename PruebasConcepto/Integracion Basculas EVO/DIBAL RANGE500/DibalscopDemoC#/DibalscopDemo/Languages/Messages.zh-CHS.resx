<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addData" xml:space="preserve">
    <value>添加数据</value>
  </data>
  <data name="addScales" xml:space="preserve">
    <value>增加电子称</value>
  </data>
  <data name="article_order" xml:space="preserve">
    <value>货品图片</value>
  </data>
  <data name="article_plu" xml:space="preserve">
    <value>分配到货品</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="cancelled" xml:space="preserve">
    <value>被取消</value>
  </data>
  <data name="cancelling" xml:space="preserve">
    <value>取消中。。。</value>
  </data>
  <data name="cancellingErr" xml:space="preserve">
    <value>取消错误</value>
  </data>
  <data name="closeServerErr" xml:space="preserve">
    <value>关闭服务错误</value>
  </data>
  <data name="closeSockErr" xml:space="preserve">
    <value>关闭套接字错误</value>
  </data>
  <data name="closeTime" xml:space="preserve">
    <value>关闭时间</value>
  </data>
  <data name="code" xml:space="preserve">
    <value>货号</value>
  </data>
  <data name="concatenateFile" xml:space="preserve">
    <value>连接文件</value>
  </data>
  <data name="conError" xml:space="preserve">
    <value>连接错误</value>
  </data>
  <data name="createImageFile" xml:space="preserve">
    <value>创建图片寄存文件</value>
  </data>
  <data name="deleteItems" xml:space="preserve">
    <value>删除货品</value>
  </data>
  <data name="deleteScales" xml:space="preserve">
    <value>删除电子称</value>
  </data>
  <data name="directKey" xml:space="preserve">
    <value>快捷键</value>
  </data>
  <data name="displaySize" xml:space="preserve">
    <value>显屏尺寸</value>
  </data>
  <data name="editData" xml:space="preserve">
    <value>编辑数据</value>
  </data>
  <data name="export" xml:space="preserve">
    <value>导出</value>
  </data>
  <data name="exporting" xml:space="preserve">
    <value>导出中。。。</value>
  </data>
  <data name="finished" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="FINSendErr" xml:space="preserve">
    <value>发送结束符错误</value>
  </data>
  <data name="generateItems" xml:space="preserve">
    <value>创建货品</value>
  </data>
  <data name="generateItemsAutomatically" xml:space="preserve">
    <value>自动创建货品</value>
  </data>
  <data name="generateItemslabel" xml:space="preserve">
    <value>创建数量</value>
  </data>
  <data name="generateScales" xml:space="preserve">
    <value>创建台数</value>
  </data>
  <data name="generateScalesAutomatically" xml:space="preserve">
    <value>自动创建电子称</value>
  </data>
  <data name="generateScalesButton" xml:space="preserve">
    <value>创建电子称</value>
  </data>
  <data name="generating" xml:space="preserve">
    <value>创建中。。。</value>
  </data>
  <data name="group" xml:space="preserve">
    <value>组号</value>
  </data>
  <data name="image" xml:space="preserve">
    <value>图片</value>
  </data>
  <data name="imageFile" xml:space="preserve">
    <value>图片文件</value>
  </data>
  <data name="imageFolder" xml:space="preserve">
    <value>图片文件夹</value>
  </data>
  <data name="imageID" xml:space="preserve">
    <value>图片号</value>
  </data>
  <data name="import" xml:space="preserve">
    <value>导入</value>
  </data>
  <data name="importDataRegisters" xml:space="preserve">
    <value>用协议导入数据</value>
  </data>
  <data name="importImages" xml:space="preserve">
    <value>导入图片</value>
  </data>
  <data name="importing" xml:space="preserve">
    <value>导入中。。。</value>
  </data>
  <data name="importItemsFile" xml:space="preserve">
    <value>用文件导入货品</value>
  </data>
  <data name="importItemsParameters" xml:space="preserve">
    <value>用货品参数导入货品</value>
  </data>
  <data name="inac_socket" xml:space="preserve">
    <value>无法获得套接字</value>
  </data>
  <data name="inches" xml:space="preserve">
    <value>尺寸</value>
  </data>
  <data name="IPAddress" xml:space="preserve">
    <value>电子称IP地址</value>
  </data>
  <data name="item" xml:space="preserve">
    <value>测试商品</value>
  </data>
  <data name="items" xml:space="preserve">
    <value>货品</value>
  </data>
  <data name="lenError" xml:space="preserve">
    <value>协议长度 &lt; 2</value>
  </data>
  <data name="logsError" xml:space="preserve">
    <value>日志文件错误</value>
  </data>
  <data name="logsFile" xml:space="preserve">
    <value>日志文件</value>
  </data>
  <data name="manual" xml:space="preserve">
    <value>手动</value>
  </data>
  <data name="masterAdd" xml:space="preserve">
    <value>称号</value>
  </data>
  <data name="model" xml:space="preserve">
    <value>型号</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>品名</value>
  </data>
  <data name="netError" xml:space="preserve">
    <value>误差</value>
  </data>
  <data name="no" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="noScaleSet" xml:space="preserve">
    <value>至少需要一台电子称</value>
  </data>
  <data name="nothing2read" xml:space="preserve">
    <value>等待中。。。未读到任何信息</value>
  </data>
  <data name="numRegister" xml:space="preserve">
    <value>协议号</value>
  </data>
  <data name="opServerError" xml:space="preserve">
    <value>打开服务错误</value>
  </data>
  <data name="path" xml:space="preserve">
    <value>路径</value>
  </data>
  <data name="PcIPAddress" xml:space="preserve">
    <value>电脑IP地址</value>
  </data>
  <data name="pcIPFormatError" xml:space="preserve">
    <value>电脑IP地址格式错误</value>
  </data>
  <data name="pendRegErr" xml:space="preserve">
    <value>试图关闭未完成数据传输错误</value>
  </data>
  <data name="price" xml:space="preserve">
    <value>价格</value>
  </data>
  <data name="publicity" xml:space="preserve">
    <value>广告</value>
  </data>
  <data name="readingRegister" xml:space="preserve">
    <value>正在读取协议</value>
  </data>
  <data name="readRegError" xml:space="preserve">
    <value>读取协议错误</value>
  </data>
  <data name="receivedRegisters" xml:space="preserve">
    <value>回收协议</value>
  </data>
  <data name="receptionPortRX" xml:space="preserve">
    <value>TCP 接收端口</value>
  </data>
  <data name="register" xml:space="preserve">
    <value>协议</value>
  </data>
  <data name="registers" xml:space="preserve">
    <value>协议</value>
  </data>
  <data name="registersFilePath" xml:space="preserve">
    <value>协议文件路径</value>
  </data>
  <data name="replaceFile" xml:space="preserve">
    <value>代替文件</value>
  </data>
  <data name="resourceErr" xml:space="preserve">
    <value>释放资源错误</value>
  </data>
  <data name="result" xml:space="preserve">
    <value>结果</value>
  </data>
  <data name="scaleEndCom" xml:space="preserve">
    <value>结束电子称通讯</value>
  </data>
  <data name="scaleIPFormatError" xml:space="preserve">
    <value>电子称IP地址错误</value>
  </data>
  <data name="scales" xml:space="preserve">
    <value>电子称</value>
  </data>
  <data name="Scales1" xml:space="preserve">
    <value>电子称</value>
  </data>
  <data name="seconds" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="sendImage" xml:space="preserve">
    <value>发送图片</value>
  </data>
  <data name="sendPortTx" xml:space="preserve">
    <value>TCP 发送端口</value>
  </data>
  <data name="showWindow" xml:space="preserve">
    <value>显示窗口</value>
  </data>
  <data name="socketNoCon" xml:space="preserve">
    <value>套接字没有被连接</value>
  </data>
  <data name="startContinuous" xml:space="preserve">
    <value>一直回收</value>
  </data>
  <data name="startEnd" xml:space="preserve">
    <value>自动开始和结束</value>
  </data>
  <data name="stopped" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="timeoutCon" xml:space="preserve">
    <value>超时</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>类别</value>
  </data>
  <data name="unit" xml:space="preserve">
    <value>计数</value>
  </data>
  <data name="unScaleCon" xml:space="preserve">
    <value>不在列表的电子称被连接</value>
  </data>
  <data name="useFIles" xml:space="preserve">
    <value>使用: dibalscopItems2.txt 和 dibalscopScales.ini 文件</value>
  </data>
  <data name="useGrid" xml:space="preserve">
    <value>使用: 电子称和货品列表</value>
  </data>
  <data name="useImages" xml:space="preserve">
    <value>使用: 电子称和图片列表</value>
  </data>
  <data name="useRegister" xml:space="preserve">
    <value>使用: 电子称和协议列表</value>
  </data>
  <data name="waiting" xml:space="preserve">
    <value>等待中。。。</value>
  </data>
  <data name="weight" xml:space="preserve">
    <value>称重</value>
  </data>
  <data name="yes" xml:space="preserve">
    <value>是</value>
  </data>
</root>